{"version":3,"file":"static/js/385.3cd07aa7.chunk.js","mappings":"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","sources":["../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/init/init.js","../node_modules/emailjs-com/es/methods/send/send.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","components/NavbarNavConst.js","components/ContactUs.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n    import NavDropdown from 'react-bootstrap/NavDropdown';\r\n    import Offcanvas from 'react-bootstrap/Offcanvas';\r\n    import kolorsystem from '../img/kolorsystem.png';\r\n    import { useNavigate } from 'react-router-dom';\r\n    import { useState } from 'react';\r\n\r\n\r\n\r\n\r\nconst NavBarNavConst = ( ) =>{\r\n    const expand = 'lg'; \r\n    const [show, setShow] = useState(false);\r\n    \r\n    const navigate = useNavigate();\r\n    \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n     return (\r\n        <div>\r\n             <Navbar expand=\"lg\" bg=\"transparent\" className=\"mobile-navbar\">\r\n        <Container fluid>\r\n        <Navbar.Brand href=\"#\">\r\n            <img className=\"nav-mobile-logo\" src={kolorsystem} alt=\"KolorSystem logo\"  loading=\"lazy\"/>\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle\r\n            className=\"e\"\r\n            aria-controls={`offcanvasNavbar-expand-${expand}`}\r\n            onClick={handleShow}\r\n        />\r\n\r\n        <Navbar.Offcanvas\r\n            id={`offcanvasNavbar-expand-${expand}`}\r\n            aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}\r\n            placement=\"end\"\r\n            show={show}\r\n            onHide={handleClose}\r\n        >\r\n            <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>\r\n                Menu\r\n            </Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n            <Nav className=\"justify-content-end flex-grow-1 pe-3\">\r\n                <Nav.Link onClick={() => { handleClose(); navigate('/'); }}>\r\n                Strona Główna\r\n                </Nav.Link>\r\n                <Nav.Link onClick={() => { handleClose(); navigate('/estimate'); }}>\r\n                Wycena\r\n                </Nav.Link>\r\n                <Nav.Link onClick={() => { handleClose(); navigate('/contactus'); }}>\r\n                Kontakt\r\n                </Nav.Link>\r\n            </Nav>\r\n            </Offcanvas.Body>\r\n        </Navbar.Offcanvas>\r\n        </Container>\r\n    </Navbar>\r\n        </div>\r\n       \r\n     )\r\n}\r\n\r\nexport default NavBarNavConst;","import React, { useState } from \"react\";\r\nimport NavBarNavConst from \"./NavbarNavConst\";\r\nimport NavbarWebConst from \"./Navbar\";\r\n\r\nimport emailjs from 'emailjs-com';\r\nconst ContactUs = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [isNameValid, setIsNameValid] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isEmailValid, setIsEmailValid] = useState(false);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [isPhoneValid, setIsPhoneValid] = useState(false);\r\n  const [isConsentGiven, setIsConsentGiven] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const nameValidate = (value) => {\r\n    const nameRegex = /^[A-Za-zÀ-ÖØ-öø-ÿżźćńółęąśŻŹĆĄŚĘŁÓŃ\\s'-]{2,}$/;\r\n    setIsNameValid(nameRegex.test(value));\r\n  };\r\n\r\n  const emailValidate = (value) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    setIsEmailValid(emailRegex.test(value));\r\n  };\r\n\r\n  const phoneValidate = (value) => {\r\n    const phoneRegex = /^[0-9]{9}$/;\r\n    setIsPhoneValid(phoneRegex.test(value));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    if (\r\n      !isNameValid ||\r\n      !isEmailValid ||\r\n      !isPhoneValid ||\r\n      !isConsentGiven ||\r\n      text.trim() === \"\"\r\n    ) {\r\n      alert(\"Uzupełnij poprawnie wszystkie pola i zaakceptuj zgodę.\");\r\n      return;\r\n    }\r\n  \r\n    const dataToSend = {\r\n      name,\r\n      email,\r\n      phone,\r\n      text,\r\n      consent: isConsentGiven,\r\n    };\r\n  \r\n    const templateParams = {\r\n      name,\r\n      email,\r\n      phone,\r\n      message: text,\r\n    };\r\n  \r\n    try {\r\n      // EmailJS wysyłka\r\n      const result = await emailjs.send(\r\n        \"service_6clsdqg\",\r\n        \"template_t33wcuk\",\r\n        templateParams,\r\n        \"b0kSQQdQ70kSaSPcg\"\r\n      );\r\n      console.log(\"E-mail wysłany:\", result.text);\r\n  \r\n      // Reset formularza\r\n      setName(\"\");\r\n      setIsNameValid(false);\r\n      setEmail(\"\");\r\n      setIsEmailValid(false);\r\n      setPhone(\"\");\r\n      setIsPhoneValid(false);\r\n      setText(\"\");\r\n      setIsConsentGiven(false);\r\n  \r\n      alert(\"Dziękujemy, wiadomość została wysłana. Odpowiemy w ciągu 24 godzin\");\r\n    } catch (error) {\r\n      console.error(\"Błąd wysyłania e-maila:\", error);\r\n      alert(\"Błąd przy wysyłaniu formularza.\");\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"contact-us-box\">\r\n           <div className=\" d-block d-lg-none\">\r\n            <NavBarNavConst />\r\n    </div>\r\n    <div>\r\n      <NavbarWebConst />\r\n     </div>\r\n      <div className=\"contact-us-img\">\r\n        <div className=\"contact-us-img\"></div>\r\n        <div className=\"contact-us-shadow\"></div>\r\n        <div className=\"estimate-title\">KONTAKT</div>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n    \r\n        <h2 className=\"contact-heading\">Masz pytanie? Napisz do nas!</h2>\r\n<p className=\"contact-subheading\">Odpowiadamy w ciągu 24h</p>\r\n        <hr className=\"line\" />\r\n\r\n        <div className=\"contact-box\">\r\n          <div>\r\n            <i className=\"fa-solid fa-address-book\"></i>\r\n          </div>\r\n          <div className=\"text\">\r\n          <div className=\"contact-link\"><i className=\"fa-solid fa-phone\"></i> <a \r\n          className=\"linkk\" href=\"tel:669396328\">\r\n              + 48 669396328\r\n            </a></div>\r\n            <div className=\"contact-link\"><i className=\"fa-solid fa-envelope\"></i> <a\r\n              className=\"linkk\"\r\n              href=\"mailto:kolor@system.pl\"\r\n            >\r\n              kolor@system.pl\r\n            </a></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* FORM START */}\r\n      <form className=\"container contact-us-form\" onSubmit={handleSubmit}>\r\n        <div className=\"contact-us-form-left-box\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"estimate-input contact-us-input iin\"\r\n            placeholder=\"Imię i nazwisko/ nazwa firmy\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              const newName = e.target.value;\r\n              setName(newName);\r\n              nameValidate(newName);\r\n            }}\r\n          />\r\n          {name.length === 0 ? (\r\n            <p className=\"contact-p\">Np: Jan Kowalski</p>\r\n          ) : !isNameValid ? (\r\n            <p className=\"error-name\">Musisz wypełnić te pole</p>\r\n          ) : null}\r\n\r\n          <input\r\n            type=\"email\"\r\n            className=\"estimate-input contact-us-input\"\r\n            placeholder=\"Adres email\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              const newEmail = e.target.value;\r\n              setEmail(newEmail);\r\n              emailValidate(newEmail);\r\n            }}\r\n          />\r\n          {email.length === 0 ? (\r\n            <p className=\"contact-p\">Np: jankowalski@gmail.com</p>\r\n          ) : !isEmailValid ? (\r\n            <p className=\"error-name\">Wpisz poprawny adres email</p>\r\n          ) : null}\r\n\r\n          <input\r\n            type=\"tel\"\r\n            className=\"estimate-input contact-us-input\"\r\n            placeholder=\"Telefon kontaktowy\"\r\n            value={phone}\r\n            onChange={(e) => {\r\n              const newPhone = e.target.value;\r\n              setPhone(newPhone);\r\n              phoneValidate(newPhone);\r\n            }}\r\n          />\r\n          {phone.length === 0 ? (\r\n            <p className=\"contact-p\">Np: 123 333 337</p>\r\n          ) : !isPhoneValid ? (\r\n            <p className=\"error-name\">Wpisz poprawny numer telefonu</p>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div className=\"contact-us-form-right-box\">\r\n          <textarea\r\n            className=\"estimate-textarea\"\r\n            placeholder=\"Wpisz wiadomość...\"\r\n            rows=\"5\"\r\n            value={text}\r\n            onChange={(e) => {\r\n              const newText = e.target.value;\r\n              setText(newText);\r\n            }}\r\n          />\r\n\r\n          <label className=\"estimate-info\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"checkbox\"\r\n              name=\"zgoda\"\r\n              value=\"check\"\r\n              checked={isConsentGiven}\r\n              onChange={(e) => setIsConsentGiven(e.target.checked)}\r\n            />\r\n            Niniejszym, wyrażam zgodę na gromadzenie i przetwarzanie moich\r\n            danych osobowych przez KolorSystem w celu przesyłania mi na adres\r\n            poczty elektronicznej, oraz numer telefonu informacji\r\n            marketingowych, a także bezpośredniego kontaktu telefonicznego w\r\n            celu marketingowym oraz na profilowanie przez Administratora danych\r\n            moich danych osobowych w celu przedstawienia mi zindywidualizowanej\r\n            oferty, reklamy i promocji. Jednocześnie jestem świadomy/a, iż w/w\r\n            podmioty są administratorami moich danych osobowych.\r\n          </label>\r\n\r\n          <button type=\"submit\" className=\"estimate-btn\">\r\n            Wyślij\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","NavBarNavConst","expand","show","setShow","useState","navigate","useNavigate","handleClose","_jsx","children","Navbar","bg","className","_jsxs","Container","fluid","Brand","href","src","kolorsystem","alt","loading","Toggle","concat","onClick","handleShow","Offcanvas","id","placement","onHide","Header","closeButton","Title","Body","Nav","Link","ContactUs","name","setName","isNameValid","setIsNameValid","email","setEmail","isEmailValid","setIsEmailValid","phone","setPhone","isPhoneValid","setIsPhoneValid","isConsentGiven","setIsConsentGiven","setText","NavbarWebConst","onSubmit","async","e","preventDefault","trim","alert","templateParams","message","result","emailjs","console","log","error","type","placeholder","value","onChange","newName","test","newEmail","newPhone","rows","newText","checked"],"sourceRoot":""}